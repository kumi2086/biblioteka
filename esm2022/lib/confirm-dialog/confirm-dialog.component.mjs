import { Component, EventEmitter, Output, ViewChild, Input, ChangeDetectionStrategy, ViewChildren, } from '@angular/core';
import { AllowIn } from 'ng-keyboard-shortcuts';
import { TranslateModule } from '@ngx-translate/core';
import { DxButtonModule, DxCheckBoxModule, DxPopupModule, DxRadioGroupModule, } from 'devextreme-angular';
import { CommonModule } from '@angular/common';
import { ReplacePipe } from './confirm-dialog-pipe';
import { KeyboardShortcutsModule } from 'ng-keyboard-shortcuts';
import * as i0 from "@angular/core";
import * as i1 from "../event.service";
import * as i2 from "@angular/common";
import * as i3 from "devextreme-angular";
import * as i4 from "devextreme-angular/core";
import * as i5 from "ng-keyboard-shortcuts";
import * as i6 from "@ngx-translate/core";
export class ConfirmDialogComponent {
    constructor(event, cd) {
        this.event = event;
        this.cd = cd;
        this.onRemoving = new EventEmitter();
        this.onClosing = new EventEmitter();
        this.onCanceling = new EventEmitter();
        this.onDynamicBtnClicked = new EventEmitter();
        this.nobtn = {};
        this.yesbtn = {};
        this.cancelbtn = {};
        this.dynamicButtons = {};
        this.group = null;
        this.btnConfig = 'yesno';
        this.checkBoxList = []; // lista checkboxów
        this.confirmHeader = '';
        this.confirmText = 'confirmDelete';
        this.disableRefreshShortcut = false;
        this.dynamicBtns = [];
        this.genius = [];
        this.groupMsg = {};
        this.isVisible = false;
        this.kindDialog = 'question';
        this.paramsMsg = {};
        this.radioBoxList = []; // lista radiobuttonow
        this.showIcon = true;
        this.textAligne = '';
        this.title = '';
        this.width = 420;
        this.shortcuts = [];
        this.unicalGuid = new Date().getTime() + Math.round(Math.random() * 10000);
        this.onCancel = () => {
            setTimeout(() => {
                try {
                    this.isVisible = false;
                    this.onCanceling.emit(true);
                }
                catch { }
            }, 0);
        };
        this.onClose = (e) => {
            setTimeout(() => {
                try {
                    this.nobtn.element.nativeElement.blur();
                    this.isVisible = false;
                    this.onClosing.emit(e || true);
                }
                catch { }
            }, 0);
        };
        this.onRemove = () => {
            let ret;
            if (!this.checkBoxList && !this.radioBoxList)
                ret = true;
            if (this.checkBoxList && !this.radioBoxList)
                ret = this.checkBoxList;
            if (!this.checkBoxList && this.radioBoxList)
                ret = this.radioBoxList;
            if (this.checkBoxList && this.radioBoxList)
                ret = {
                    checkBoxList: this.checkBoxList,
                    radioBoxList: this.radioBoxList,
                };
            if (this.groupMsg)
                ret = this.groupMsg;
            this.isVisible = false;
            this.onRemoving.emit(ret);
        };
    }
    ngOnInit() {
        if (!this.width)
            this.width = 420;
        if (!this.title)
            this.title = 'information';
        if (this.kindDialog == 'question')
            this.title = 'nests.types.question';
        if (this.kindDialog == 'error')
            this.title = 'error';
        if (this.kindDialog == 'warning')
            this.title = 'warning';
    }
    setFocus() {
        setTimeout(() => {
            if (this.cancelbtn) {
                this.event.setFocus(this.cancelbtn);
            }
            else {
                this.event.setFocus(this.nobtn);
            }
        }, 300);
    }
    onInit(e) {
        e.component.registerKeyHandler('escape', function () { });
    }
    ngAfterViewInit() {
        this.shortcuts.push({
            key: 'escape',
            allowIn: [AllowIn.Input, AllowIn.Select, AllowIn.Textarea],
            command: () => {
                this.btnConfig == 'yesnocancel' ? this.onCancel() : this.onClose();
            },
            preventDefault: true,
        });
    }
    ngModelChange() {
        if (!this.isVisible)
            this.cd.detectChanges();
        if (this.isVisible && this.dynamicBtns) {
            setTimeout(() => {
                this.dynamicButtons?.last?.nativeElement?.firstElementChild?.focus();
            }, 600);
        }
    }
    ngOnDestroy() {
        this.event.onHiddenPopUp(this.unicalGuid);
    }
    onDynamicBtnClick(e) {
        switch (e.action) {
            case 'defaultConfirm':
                this.onRemove();
                break;
            case 'defaultClose':
                this.onClose();
                break;
            case 'defaultCancel':
                this.onCancel();
                break;
            default:
                this.onDynamicBtnClicked.emit(e.action);
                break;
        }
    }
    disabledButton(check) {
        return check.disabled;
    }
    checkValue(check) {
        return check.value;
    }
    onDynamicBtnArrowLeft(i) {
        if (i > 0) {
            let btnToFocus = document.getElementById('btn' + (i - 1) + this.unicalGuid);
            if (btnToFocus) {
                btnToFocus.focus();
            }
        }
    }
    onDynamicBtnArrowRight(i) {
        if (i < this.dynamicBtns.length - 1) {
            let btnToFocus = document.getElementById('btn' + (i + 1) + this.unicalGuid);
            if (btnToFocus) {
                btnToFocus.focus();
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.5", ngImport: i0, type: ConfirmDialogComponent, deps: [{ token: i1.EventService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.5", type: ConfirmDialogComponent, isStandalone: true, selector: "app-confirm-dialog", inputs: { btnConfig: "btnConfig", checkBoxList: "checkBoxList", confirmHeader: "confirmHeader", confirmText: "confirmText", disableRefreshShortcut: "disableRefreshShortcut", dynamicBtns: "dynamicBtns", genius: "genius", groupMsg: "groupMsg", isVisible: "isVisible", kindDialog: "kindDialog", paramsMsg: "paramsMsg", radioBoxList: "radioBoxList", showIcon: "showIcon", textAligne: "textAligne", title: "title", width: "width" }, outputs: { onRemoving: "onRemoving", onClosing: "onClosing", onCanceling: "onCanceling", onDynamicBtnClicked: "onDynamicBtnClicked" }, viewQueries: [{ propertyName: "nobtn", first: true, predicate: ["nobtn"], descendants: true }, { propertyName: "yesbtn", first: true, predicate: ["yesbtn"], descendants: true }, { propertyName: "cancelbtn", first: true, predicate: ["cancelbtn"], descendants: true }, { propertyName: "dynamicButtons", predicate: ["dynamicButtons"], descendants: true }], ngImport: i0, template: "<dx-popup\n  [width]=\"width\"\n  height=\"auto\"\n  position=\"center\"\n  [animation]=\"{\n    show: { type: 'slideIn', direction: 'bottom' },\n    hide: { type: 'slideOut', direction: 'bottom' }\n  }\"\n  [showTitle]=\"false\"\n  [title]=\"title | translate\"\n  [(visible)]=\"isVisible\"\n  (visibleChange)=\"ngModelChange()\"\n  (onShowing)=\"event.onShownPopUp(unicalGuid)\"\n  (onShown)=\"setFocus()\"\n  (onHiding)=\"event.onHiddenPopUp(unicalGuid)\"\n  [wrapperAttr]=\"{ id: unicalGuid, class: 'confirm-dialog-wapro' }\"\n  (onInitialized)=\"onInit($event)\"\n  [minWidth]=\"420\"\n>\n  <div *dxTemplate=\"let content of 'content'\">\n    <div class=\"dialog-body\">\n      <div\n        class=\"dialog-icon\"\n        [ngClass]=\"{\n          'confirme-warning': kindDialog == 'warning',\n          'confirme-information': kindDialog == 'information',\n          'confirme-question': kindDialog == 'question',\n          'confirme-delete': kindDialog == 'error' || showIcon,\n          'no-width': !showIcon && !kindDialog\n        }\"\n        *ngIf=\"!groupMsg && confirmText\"\n      ></div>\n      <div\n        class=\"dialog-main-text\"\n        [ngClass]=\"{ 'width-all': !showIcon && !kindDialog }\"\n      >\n        <p\n          class=\"confirmHeader confirm-dialog-header\"\n          *ngIf=\"confirmHeader\"\n          [innerHTML]=\"confirmHeader | translate | replace : '[|]' : '<br>'\"\n        ></p>\n        <p\n          class=\"confirmMsg\"\n          [innerHTML]=\"\n            confirmText | translate : paramsMsg | replace : '[|]' : '<br>'\n          \"\n          *ngIf=\"!genius\"\n        ></p>\n\n        <ng-container *ngIf=\"groupMsg\">\n          <p\n            *ngIf=\"groupMsg.textInfo\"\n            [innerHTML]=\"groupMsg.textInfo | translate\"\n            style=\"margin-bottom: 10px\"\n          ></p>\n          <div\n            *ngFor=\"let group of groupMsg.list; let i = index\"\n            style=\"display: table\"\n          >\n            <div style=\"float: left; width: 30px\">\n              <i\n                class=\"icon\"\n                [ngClass]=\"{\n                  'number-1': i == 0,\n                  'number-2': i == 1,\n                  'number-3': i == 2,\n                  'number-4': i == 3,\n                  'number-5': i == 4,\n                  'number-6': i == 5,\n                  'number-7': i == 6,\n                  'number-8': i == 7,\n                  'number-9': i == 8\n                }\"\n              ></i>\n            </div>\n            <div\n              style=\"\n                display: table-cell;\n                vertical-align: middle;\n                width: calc(100% - 30px);\n                box-sizing: border-box;\n                padding-left: 10px;\n              \"\n            >\n              <p\n                [innerHTML]=\"group.textMsg | translate\"\n                style=\"margin-bottom: 0px\"\n              ></p>\n              <div *ngIf=\"group.readMore\" class=\"readMoreClose\">\n                <p *ngIf=\"group.isOpen\" style=\"margin-top: 15px\">\n                  {{ group.readMore.textMsg | translate }}\n                </p>\n\n                <div *ngIf=\"group.isOpen\" style=\"margin-top: 15px\">\n                  <div *ngFor=\"let check of group.readMore.checkBoxList\">\n                    <dx-check-box\n                      text=\"{{ check.text | translate }}\"\n                      width=\"100%\"\n                      [value]=\"checkValue(check)\"\n                      [readOnly]=\"check.readOnly\"\n                      [disabled]=\"disabledButton(check)\"\n                    >\n                    </dx-check-box\n                    ><br />\n                  </div>\n                  <div\n                    *ngFor=\"let radio of group.readMore.radioBoxList\"\n                    style=\"margin-top: 15px\"\n                  >\n                    <div class=\"c-frame-row\">\n                      <h5>{{ radio.text | translate }}</h5>\n                    </div>\n                    <dx-radio-group\n                      [items]=\"radio.items\"\n                      [layout]=\"radio.layout\"\n                      [readOnly]=\"radio.readOnly\"\n                      [disabled]=\"disabledButton(radio)\"\n                      [(value)]=\"radio.value\"\n                      displayExpr=\"label\"\n                      valueExpr=\"value\"\n                      style=\"margin-left: -5px\"\n                    >\n                    </dx-radio-group>\n                  </div>\n                </div>\n\n                <p class=\"readMore\" (click)=\"group.isOpen = !group.isOpen\">\n                  <i\n                    class=\"icon\"\n                    style=\"position: relative; top: 4px\"\n                    [ngClass]=\"{\n                      'absui-icon--arrow-drop-down-box': !group.isOpen,\n                      'dx-icon-spinup': group.isOpen\n                    }\"\n                  ></i>\n                  {{ \"inventory.readMore\" | translate }}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div\n            *ngIf=\"\n              (groupMsg && groupMsg.checkBoxList) ||\n              (group && group.radioBoxList)\n            \"\n            style=\"\n              float: left;\n              width: 100%;\n              padding-left: 37px;\n              margin-top: 5px;\n              margin-bottom: 20px;\n            \"\n          >\n            <div *ngFor=\"let check of groupMsg.checkBoxList\">\n              <dx-check-box\n                text=\"{{ check.text | translate }}\"\n                width=\"100%\"\n                [value]=\"checkValue(check)\"\n                [readOnly]=\"check.readOnly\"\n                [disabled]=\"disabledButton(check)\"\n              >\n              </dx-check-box\n              ><br />\n            </div>\n\n            <div\n              *ngFor=\"let radio of groupMsg.radioBoxList\"\n              style=\"margin-top: 15px\"\n            >\n              <div class=\"c-frame-row\">\n                <h5>{{ radio.text | translate }}</h5>\n              </div>\n              <dx-radio-group\n                [items]=\"radio.items\"\n                [layout]=\"radio.layout\"\n                [readOnly]=\"radio.readOnly\"\n                [(value)]=\"radio.value\"\n                displayExpr=\"label\"\n                valueExpr=\"value\"\n                style=\"margin-left: -5px\"\n                [disabled]=\"disabledButton(radio)\"\n              >\n              </dx-radio-group>\n            </div>\n          </div>\n\n          <p class=\"confirmMsg\" *ngIf=\"groupMsg.questionMsg\">\n            {{ groupMsg.questionMsg | translate }}\n          </p>\n        </ng-container>\n\n        <ng-container *ngIf=\"checkBoxList || radioBoxList\">\n          <div *ngFor=\"let check of checkBoxList\">\n            <dx-check-box\n              text=\"{{ check.text | translate }}\"\n              width=\"100%\"\n              [value]=\"checkValue(check)\"\n              [readOnly]=\"check.readOnly\"\n              [disabled]=\"disabledButton(check)\"\n            >\n            </dx-check-box\n            ><br />\n          </div>\n\n          <div\n            *ngFor=\"let radio of radioBoxList; let index = index\"\n            [ngStyle]=\"{ 'margin-top': index > 0 ? '15px' : 0 }\"\n          >\n            <div class=\"c-frame-row\">\n              <h5 *ngIf=\"radio.text\">{{ radio.text | translate }}</h5>\n            </div>\n            <dx-radio-group\n              [items]=\"radio.items\"\n              [layout]=\"radio.layout\"\n              [readOnly]=\"radio.readOnly\"\n              [(value)]=\"radio.value\"\n              displayExpr=\"label\"\n              valueExpr=\"value\"\n              style=\"margin-left: -5px\"\n              [disabled]=\"disabledButton(radio)\"\n            >\n            </dx-radio-group>\n          </div>\n        </ng-container>\n\n        <div *ngIf=\"genius\">\n          <div class=\"genius-group\" *ngFor=\"let group of genius\">\n            <div class=\"genius-item\" *ngFor=\"let item of group.items\">\n              <div class=\"genius-description\">\n                {{ item.description | translate }}:\n              </div>\n              <div\n                class=\"genius-value\"\n                [ngClass]=\"{ highlighted: item?.highlighted }\"\n              >\n                {{ item.value }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"dialog-footer\">\n      <ng-container *ngIf=\"genius\">\n        <img\n          src=\"../../../assets/img/powered_by-dark.svg\"\n          alt=\"Powered by Genius\"\n          height=\"26\"\n          style=\"margin: 0 auto auto 44px\"\n        />\n      </ng-container>\n      <ng-container *ngIf=\"!btnConfig\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'yes' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'no' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        ></dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'close'\">\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.close' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'saveCancel'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.save' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'save' + unicalGuid\"\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n          #yesbtn\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        ></dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'yesnocancel' || btnConfig == 'yesno'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'yes' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          [text]=\"'no' | translate\"\n          type=\"danger\"\n          stylingMode=\"contained\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n          (keydown.arrowright)=\"event.setFocus(cancelbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onCancel()\"\n          #cancelbtn\n          (keydown.arrowleft)=\"event.setFocus(nobtn)\"\n          *ngIf=\"btnConfig == 'yesnocancel'\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'continuegiveup'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.continue' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.giveup' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'substitutes'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'substitutes.checkSubstitutes' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'groupedReport'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'print' | translate\"\n          (onClick)=\"onClose('print')\"\n          [id]=\"'confirm' + unicalGuid\"\n          #printbtn\n          (keydown.arrowright)=\"event.setFocus(emailbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'sendEmail' | translate\"\n          (onClick)=\"onClose('email')\"\n          #emailbtn\n          (keydown.arrowleft)=\"event.setFocus(printbtn)\"\n          (keydown.arrowright)=\"event.setFocus(pdfbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'savePdf' | translate\"\n          (onClick)=\"onClose('savePdf')\"\n          #pdfbtn\n          (keydown.arrowleft)=\"event.setFocus(emailbtn)\"\n          (keydown.arrowright)=\"event.setFocus(edocsbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'toEdocuments' | translate\"\n          (onClick)=\"onClose('eDocuments')\"\n          #edocsbtn\n          (keydown.arrowleft)=\"event.setFocus(pdfbtn)\"\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onClose('cancel')\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(edocsbtn)\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'dynamicContent'\">\n        <div *ngFor=\"let btn of dynamicBtns; let i = index\" #dynamicButtons>\n          <dx-button\n            [type]=\"btn.type\"\n            stylingMode=\"contained\"\n            [text]=\"btn.text\"\n            (onClick)=\"onDynamicBtnClick(btn)\"\n            [id]=\"'btn' + i + unicalGuid\"\n            (keydown.arrowleft)=\"onDynamicBtnArrowLeft(i)\"\n            (keydown.arrowright)=\"onDynamicBtnArrowRight(i)\"\n          >\n          </dx-button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</dx-popup>\n\n<!-- [unicalGuid]=\"unicalGuid\" -->\n<ng-keyboard-shortcuts [shortcuts]=\"shortcuts\" [disabled]=\"!isVisible\">\n</ng-keyboard-shortcuts>\n", styles: [".confirme-warning,.confirme-delete,.confirme-question,.confirme-information{font-family:Lumen;font-size:1.875rem;line-height:30px;vertical-align:middle}.confirme-delete:before{color:#bc1a22;content:\"\\e888\"}.confirme-warning:before{color:#a86800;content:\"\\e002\"}.confirme-information:before{color:#0074ad;content:\"\\e88f\"}.confirme-question:before{color:#4c4c4c;content:\"\\e8fd\"}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "ngmodule", type: DxPopupModule }, { kind: "component", type: i3.DxPopupComponent, selector: "dx-popup", inputs: ["accessKey", "animation", "closeOnOutsideClick", "container", "contentTemplate", "copyRootClassesToWrapper", "deferRendering", "disabled", "dragAndResizeArea", "dragEnabled", "dragOutsideBoundary", "elementAttr", "enableBodyScroll", "focusStateEnabled", "fullScreen", "height", "hideOnOutsideClick", "hideOnParentScroll", "hint", "hoverStateEnabled", "maxHeight", "maxWidth", "minHeight", "minWidth", "position", "resizeEnabled", "restorePosition", "rtlEnabled", "shading", "shadingColor", "showCloseButton", "showTitle", "tabIndex", "title", "titleTemplate", "toolbarItems", "visible", "width", "wrapperAttr"], outputs: ["onContentReady", "onDisposing", "onHidden", "onHiding", "onInitialized", "onOptionChanged", "onResize", "onResizeEnd", "onResizeStart", "onShowing", "onShown", "onTitleRendered", "accessKeyChange", "animationChange", "closeOnOutsideClickChange", "containerChange", "contentTemplateChange", "copyRootClassesToWrapperChange", "deferRenderingChange", "disabledChange", "dragAndResizeAreaChange", "dragEnabledChange", "dragOutsideBoundaryChange", "elementAttrChange", "enableBodyScrollChange", "focusStateEnabledChange", "fullScreenChange", "heightChange", "hideOnOutsideClickChange", "hideOnParentScrollChange", "hintChange", "hoverStateEnabledChange", "maxHeightChange", "maxWidthChange", "minHeightChange", "minWidthChange", "positionChange", "resizeEnabledChange", "restorePositionChange", "rtlEnabledChange", "shadingChange", "shadingColorChange", "showCloseButtonChange", "showTitleChange", "tabIndexChange", "titleChange", "titleTemplateChange", "toolbarItemsChange", "visibleChange", "widthChange", "wrapperAttrChange"] }, { kind: "directive", type: i4.DxTemplateDirective, selector: "[dxTemplate]", inputs: ["dxTemplateOf"] }, { kind: "ngmodule", type: DxButtonModule }, { kind: "component", type: i3.DxButtonComponent, selector: "dx-button", inputs: ["accessKey", "activeStateEnabled", "disabled", "elementAttr", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "icon", "rtlEnabled", "stylingMode", "tabIndex", "template", "text", "type", "useSubmitBehavior", "validationGroup", "visible", "width"], outputs: ["onClick", "onContentReady", "onDisposing", "onInitialized", "onOptionChanged", "accessKeyChange", "activeStateEnabledChange", "disabledChange", "elementAttrChange", "focusStateEnabledChange", "heightChange", "hintChange", "hoverStateEnabledChange", "iconChange", "rtlEnabledChange", "stylingModeChange", "tabIndexChange", "templateChange", "textChange", "typeChange", "useSubmitBehaviorChange", "validationGroupChange", "visibleChange", "widthChange"] }, { kind: "ngmodule", type: DxRadioGroupModule }, { kind: "component", type: i3.DxRadioGroupComponent, selector: "dx-radio-group", inputs: ["accessKey", "activeStateEnabled", "dataSource", "disabled", "displayExpr", "elementAttr", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "isValid", "items", "itemTemplate", "layout", "name", "readOnly", "rtlEnabled", "tabIndex", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "value", "valueExpr", "visible", "width"], outputs: ["onContentReady", "onDisposing", "onInitialized", "onOptionChanged", "onValueChanged", "accessKeyChange", "activeStateEnabledChange", "dataSourceChange", "disabledChange", "displayExprChange", "elementAttrChange", "focusStateEnabledChange", "heightChange", "hintChange", "hoverStateEnabledChange", "isValidChange", "itemsChange", "itemTemplateChange", "layoutChange", "nameChange", "readOnlyChange", "rtlEnabledChange", "tabIndexChange", "validationErrorChange", "validationErrorsChange", "validationMessageModeChange", "validationMessagePositionChange", "validationStatusChange", "valueChange", "valueExprChange", "visibleChange", "widthChange", "onBlur"] }, { kind: "ngmodule", type: DxCheckBoxModule }, { kind: "component", type: i3.DxCheckBoxComponent, selector: "dx-check-box", inputs: ["accessKey", "activeStateEnabled", "disabled", "elementAttr", "enableThreeStateBehavior", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "iconSize", "isValid", "name", "readOnly", "rtlEnabled", "tabIndex", "text", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "value", "visible", "width"], outputs: ["onContentReady", "onDisposing", "onInitialized", "onOptionChanged", "onValueChanged", "accessKeyChange", "activeStateEnabledChange", "disabledChange", "elementAttrChange", "enableThreeStateBehaviorChange", "focusStateEnabledChange", "heightChange", "hintChange", "hoverStateEnabledChange", "iconSizeChange", "isValidChange", "nameChange", "readOnlyChange", "rtlEnabledChange", "tabIndexChange", "textChange", "validationErrorChange", "validationErrorsChange", "validationMessageModeChange", "validationMessagePositionChange", "validationStatusChange", "valueChange", "visibleChange", "widthChange", "onBlur"] }, { kind: "pipe", type: ReplacePipe, name: "replace" }, { kind: "ngmodule", type: KeyboardShortcutsModule }, { kind: "component", type: i5.KeyboardShortcutsComponent, selector: "ng-keyboard-shortcuts", inputs: ["shortcuts", "disabled"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.5", ngImport: i0, type: ConfirmDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-confirm-dialog', standalone: true, imports: [
                        CommonModule,
                        DxPopupModule,
                        DxButtonModule,
                        DxRadioGroupModule,
                        DxCheckBoxModule,
                        ReplacePipe,
                        KeyboardShortcutsModule,
                        TranslateModule,
                    ], changeDetection: ChangeDetectionStrategy.OnPush, template: "<dx-popup\n  [width]=\"width\"\n  height=\"auto\"\n  position=\"center\"\n  [animation]=\"{\n    show: { type: 'slideIn', direction: 'bottom' },\n    hide: { type: 'slideOut', direction: 'bottom' }\n  }\"\n  [showTitle]=\"false\"\n  [title]=\"title | translate\"\n  [(visible)]=\"isVisible\"\n  (visibleChange)=\"ngModelChange()\"\n  (onShowing)=\"event.onShownPopUp(unicalGuid)\"\n  (onShown)=\"setFocus()\"\n  (onHiding)=\"event.onHiddenPopUp(unicalGuid)\"\n  [wrapperAttr]=\"{ id: unicalGuid, class: 'confirm-dialog-wapro' }\"\n  (onInitialized)=\"onInit($event)\"\n  [minWidth]=\"420\"\n>\n  <div *dxTemplate=\"let content of 'content'\">\n    <div class=\"dialog-body\">\n      <div\n        class=\"dialog-icon\"\n        [ngClass]=\"{\n          'confirme-warning': kindDialog == 'warning',\n          'confirme-information': kindDialog == 'information',\n          'confirme-question': kindDialog == 'question',\n          'confirme-delete': kindDialog == 'error' || showIcon,\n          'no-width': !showIcon && !kindDialog\n        }\"\n        *ngIf=\"!groupMsg && confirmText\"\n      ></div>\n      <div\n        class=\"dialog-main-text\"\n        [ngClass]=\"{ 'width-all': !showIcon && !kindDialog }\"\n      >\n        <p\n          class=\"confirmHeader confirm-dialog-header\"\n          *ngIf=\"confirmHeader\"\n          [innerHTML]=\"confirmHeader | translate | replace : '[|]' : '<br>'\"\n        ></p>\n        <p\n          class=\"confirmMsg\"\n          [innerHTML]=\"\n            confirmText | translate : paramsMsg | replace : '[|]' : '<br>'\n          \"\n          *ngIf=\"!genius\"\n        ></p>\n\n        <ng-container *ngIf=\"groupMsg\">\n          <p\n            *ngIf=\"groupMsg.textInfo\"\n            [innerHTML]=\"groupMsg.textInfo | translate\"\n            style=\"margin-bottom: 10px\"\n          ></p>\n          <div\n            *ngFor=\"let group of groupMsg.list; let i = index\"\n            style=\"display: table\"\n          >\n            <div style=\"float: left; width: 30px\">\n              <i\n                class=\"icon\"\n                [ngClass]=\"{\n                  'number-1': i == 0,\n                  'number-2': i == 1,\n                  'number-3': i == 2,\n                  'number-4': i == 3,\n                  'number-5': i == 4,\n                  'number-6': i == 5,\n                  'number-7': i == 6,\n                  'number-8': i == 7,\n                  'number-9': i == 8\n                }\"\n              ></i>\n            </div>\n            <div\n              style=\"\n                display: table-cell;\n                vertical-align: middle;\n                width: calc(100% - 30px);\n                box-sizing: border-box;\n                padding-left: 10px;\n              \"\n            >\n              <p\n                [innerHTML]=\"group.textMsg | translate\"\n                style=\"margin-bottom: 0px\"\n              ></p>\n              <div *ngIf=\"group.readMore\" class=\"readMoreClose\">\n                <p *ngIf=\"group.isOpen\" style=\"margin-top: 15px\">\n                  {{ group.readMore.textMsg | translate }}\n                </p>\n\n                <div *ngIf=\"group.isOpen\" style=\"margin-top: 15px\">\n                  <div *ngFor=\"let check of group.readMore.checkBoxList\">\n                    <dx-check-box\n                      text=\"{{ check.text | translate }}\"\n                      width=\"100%\"\n                      [value]=\"checkValue(check)\"\n                      [readOnly]=\"check.readOnly\"\n                      [disabled]=\"disabledButton(check)\"\n                    >\n                    </dx-check-box\n                    ><br />\n                  </div>\n                  <div\n                    *ngFor=\"let radio of group.readMore.radioBoxList\"\n                    style=\"margin-top: 15px\"\n                  >\n                    <div class=\"c-frame-row\">\n                      <h5>{{ radio.text | translate }}</h5>\n                    </div>\n                    <dx-radio-group\n                      [items]=\"radio.items\"\n                      [layout]=\"radio.layout\"\n                      [readOnly]=\"radio.readOnly\"\n                      [disabled]=\"disabledButton(radio)\"\n                      [(value)]=\"radio.value\"\n                      displayExpr=\"label\"\n                      valueExpr=\"value\"\n                      style=\"margin-left: -5px\"\n                    >\n                    </dx-radio-group>\n                  </div>\n                </div>\n\n                <p class=\"readMore\" (click)=\"group.isOpen = !group.isOpen\">\n                  <i\n                    class=\"icon\"\n                    style=\"position: relative; top: 4px\"\n                    [ngClass]=\"{\n                      'absui-icon--arrow-drop-down-box': !group.isOpen,\n                      'dx-icon-spinup': group.isOpen\n                    }\"\n                  ></i>\n                  {{ \"inventory.readMore\" | translate }}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div\n            *ngIf=\"\n              (groupMsg && groupMsg.checkBoxList) ||\n              (group && group.radioBoxList)\n            \"\n            style=\"\n              float: left;\n              width: 100%;\n              padding-left: 37px;\n              margin-top: 5px;\n              margin-bottom: 20px;\n            \"\n          >\n            <div *ngFor=\"let check of groupMsg.checkBoxList\">\n              <dx-check-box\n                text=\"{{ check.text | translate }}\"\n                width=\"100%\"\n                [value]=\"checkValue(check)\"\n                [readOnly]=\"check.readOnly\"\n                [disabled]=\"disabledButton(check)\"\n              >\n              </dx-check-box\n              ><br />\n            </div>\n\n            <div\n              *ngFor=\"let radio of groupMsg.radioBoxList\"\n              style=\"margin-top: 15px\"\n            >\n              <div class=\"c-frame-row\">\n                <h5>{{ radio.text | translate }}</h5>\n              </div>\n              <dx-radio-group\n                [items]=\"radio.items\"\n                [layout]=\"radio.layout\"\n                [readOnly]=\"radio.readOnly\"\n                [(value)]=\"radio.value\"\n                displayExpr=\"label\"\n                valueExpr=\"value\"\n                style=\"margin-left: -5px\"\n                [disabled]=\"disabledButton(radio)\"\n              >\n              </dx-radio-group>\n            </div>\n          </div>\n\n          <p class=\"confirmMsg\" *ngIf=\"groupMsg.questionMsg\">\n            {{ groupMsg.questionMsg | translate }}\n          </p>\n        </ng-container>\n\n        <ng-container *ngIf=\"checkBoxList || radioBoxList\">\n          <div *ngFor=\"let check of checkBoxList\">\n            <dx-check-box\n              text=\"{{ check.text | translate }}\"\n              width=\"100%\"\n              [value]=\"checkValue(check)\"\n              [readOnly]=\"check.readOnly\"\n              [disabled]=\"disabledButton(check)\"\n            >\n            </dx-check-box\n            ><br />\n          </div>\n\n          <div\n            *ngFor=\"let radio of radioBoxList; let index = index\"\n            [ngStyle]=\"{ 'margin-top': index > 0 ? '15px' : 0 }\"\n          >\n            <div class=\"c-frame-row\">\n              <h5 *ngIf=\"radio.text\">{{ radio.text | translate }}</h5>\n            </div>\n            <dx-radio-group\n              [items]=\"radio.items\"\n              [layout]=\"radio.layout\"\n              [readOnly]=\"radio.readOnly\"\n              [(value)]=\"radio.value\"\n              displayExpr=\"label\"\n              valueExpr=\"value\"\n              style=\"margin-left: -5px\"\n              [disabled]=\"disabledButton(radio)\"\n            >\n            </dx-radio-group>\n          </div>\n        </ng-container>\n\n        <div *ngIf=\"genius\">\n          <div class=\"genius-group\" *ngFor=\"let group of genius\">\n            <div class=\"genius-item\" *ngFor=\"let item of group.items\">\n              <div class=\"genius-description\">\n                {{ item.description | translate }}:\n              </div>\n              <div\n                class=\"genius-value\"\n                [ngClass]=\"{ highlighted: item?.highlighted }\"\n              >\n                {{ item.value }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"dialog-footer\">\n      <ng-container *ngIf=\"genius\">\n        <img\n          src=\"../../../assets/img/powered_by-dark.svg\"\n          alt=\"Powered by Genius\"\n          height=\"26\"\n          style=\"margin: 0 auto auto 44px\"\n        />\n      </ng-container>\n      <ng-container *ngIf=\"!btnConfig\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'yes' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'no' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        ></dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'close'\">\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.close' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'saveCancel'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.save' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'save' + unicalGuid\"\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n          #yesbtn\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        ></dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'yesnocancel' || btnConfig == 'yesno'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'yes' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          [text]=\"'no' | translate\"\n          type=\"danger\"\n          stylingMode=\"contained\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n          (keydown.arrowright)=\"event.setFocus(cancelbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onCancel()\"\n          #cancelbtn\n          (keydown.arrowleft)=\"event.setFocus(nobtn)\"\n          *ngIf=\"btnConfig == 'yesnocancel'\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'continuegiveup'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.continue' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.giveup' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'substitutes'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'substitutes.checkSubstitutes' | translate\"\n          (onClick)=\"onRemove()\"\n          [id]=\"'confirm' + unicalGuid\"\n          #yesbtn\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onClose()\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(yesbtn)\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'groupedReport'\">\n        <dx-button\n          type=\"success\"\n          stylingMode=\"contained\"\n          [text]=\"'print' | translate\"\n          (onClick)=\"onClose('print')\"\n          [id]=\"'confirm' + unicalGuid\"\n          #printbtn\n          (keydown.arrowright)=\"event.setFocus(emailbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'sendEmail' | translate\"\n          (onClick)=\"onClose('email')\"\n          #emailbtn\n          (keydown.arrowleft)=\"event.setFocus(printbtn)\"\n          (keydown.arrowright)=\"event.setFocus(pdfbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'savePdf' | translate\"\n          (onClick)=\"onClose('savePdf')\"\n          #pdfbtn\n          (keydown.arrowleft)=\"event.setFocus(emailbtn)\"\n          (keydown.arrowright)=\"event.setFocus(edocsbtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'toEdocuments' | translate\"\n          (onClick)=\"onClose('eDocuments')\"\n          #edocsbtn\n          (keydown.arrowleft)=\"event.setFocus(pdfbtn)\"\n          (keydown.arrowright)=\"event.setFocus(nobtn)\"\n        >\n        </dx-button>\n        <dx-button\n          type=\"danger\"\n          stylingMode=\"contained\"\n          [text]=\"'buttons.cancel' | translate\"\n          (onClick)=\"onClose('cancel')\"\n          #nobtn\n          (keydown.arrowleft)=\"event.setFocus(edocsbtn)\"\n        >\n        </dx-button>\n      </ng-container>\n      <ng-container *ngIf=\"btnConfig == 'dynamicContent'\">\n        <div *ngFor=\"let btn of dynamicBtns; let i = index\" #dynamicButtons>\n          <dx-button\n            [type]=\"btn.type\"\n            stylingMode=\"contained\"\n            [text]=\"btn.text\"\n            (onClick)=\"onDynamicBtnClick(btn)\"\n            [id]=\"'btn' + i + unicalGuid\"\n            (keydown.arrowleft)=\"onDynamicBtnArrowLeft(i)\"\n            (keydown.arrowright)=\"onDynamicBtnArrowRight(i)\"\n          >\n          </dx-button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</dx-popup>\n\n<!-- [unicalGuid]=\"unicalGuid\" -->\n<ng-keyboard-shortcuts [shortcuts]=\"shortcuts\" [disabled]=\"!isVisible\">\n</ng-keyboard-shortcuts>\n", styles: [".confirme-warning,.confirme-delete,.confirme-question,.confirme-information{font-family:Lumen;font-size:1.875rem;line-height:30px;vertical-align:middle}.confirme-delete:before{color:#bc1a22;content:\"\\e888\"}.confirme-warning:before{color:#a86800;content:\"\\e002\"}.confirme-information:before{color:#0074ad;content:\"\\e88f\"}.confirme-question:before{color:#4c4c4c;content:\"\\e8fd\"}\n"] }]
        }], ctorParameters: () => [{ type: i1.EventService }, { type: i0.ChangeDetectorRef }], propDecorators: { onRemoving: [{
                type: Output
            }], onClosing: [{
                type: Output
            }], onCanceling: [{
                type: Output
            }], onDynamicBtnClicked: [{
                type: Output
            }], nobtn: [{
                type: ViewChild,
                args: ['nobtn']
            }], yesbtn: [{
                type: ViewChild,
                args: ['yesbtn']
            }], cancelbtn: [{
                type: ViewChild,
                args: ['cancelbtn']
            }], dynamicButtons: [{
                type: ViewChildren,
                args: ['dynamicButtons']
            }], btnConfig: [{
                type: Input
            }], checkBoxList: [{
                type: Input
            }], confirmHeader: [{
                type: Input
            }], confirmText: [{
                type: Input
            }], disableRefreshShortcut: [{
                type: Input
            }], dynamicBtns: [{
                type: Input
            }], genius: [{
                type: Input
            }], groupMsg: [{
                type: Input
            }], isVisible: [{
                type: Input
            }], kindDialog: [{
                type: Input
            }], paramsMsg: [{
                type: Input
            }], radioBoxList: [{
                type: Input
            }], showIcon: [{
                type: Input
            }], textAligne: [{
                type: Input
            }], title: [{
                type: Input
            }], width: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,